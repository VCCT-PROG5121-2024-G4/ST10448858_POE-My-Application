import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.Scanner;

public class Part2Test {
    private Part_2 part2;

    @BeforeEach
    public void setUp() {
        part2 = new Part_2();
        part2.initializeTestData();
    }

    @Test
    public void testDeveloperArrayPopulatedCorrectly() {
        Task[] tasks = part2.tasks;
        assertEquals("Mike Smith", tasks[0].getFirstName() + " " + tasks[0].getLastName());
        assertEquals("Edward Harrison", tasks[1].getFirstName() + " " + tasks[1].getLastName());
        assertEquals("Samantha Paulson", tasks[2].getFirstName() + " " + tasks[2].getLastName());
        assertEquals("Glenda Oberholzer", tasks[3].getFirstName() + " " + tasks[3].getLastName());
    }

    @Test
    public void testDisplayDeveloperAndDurationForLongestTask() {
        Task[] tasks = part2.tasks;
        Task longestTask = tasks[0];
        for (Task task : tasks) {
            if (task != null && task.getDuration() > longestTask.getDuration()) {
                longestTask = task;
            }
        }
        assertEquals("Glenda Oberholzer", longestTask.getFirstName() + " " + longestTask.getLastName());
        assertEquals(11, longestTask.getDuration());
    }

    @Test
    public void testSearchForTasks() {
        Scanner scanner = new Scanner("Create Login\n");
        part2.searchTaskByName(scanner);
        Task[] tasks = part2.tasks;
        for (Task task : tasks) {
            if (task != null && task.getTaskName().equalsIgnoreCase("Create Login")) {
                assertEquals("Mike Smith", task.getFirstName() + " " + task.getLastName());
                assertEquals("Create Login", task.getTaskName());
            }
        }
    }

    @Test
    public void testSearchTasksAssignedToDeveloper() {
        Task[] tasks = part2.tasks;
        for (Task task : tasks) {
            if (task != null && task.getFirstName().equalsIgnoreCase("Samantha") && task.getLastName().equalsIgnoreCase("Paulson")) {
                assertEquals("Create Reports", task.getTaskName());
            }
        }
    }

    @Test
    public void testDeleteTaskFromArray() {
        Scanner scanner = new Scanner("Create Reports\n");
        part2.deleteTaskByName(scanner);
        Task[] tasks = part2.tasks;
        for (Task task : tasks) {
            if (task != null && task.getTaskName().equalsIgnoreCase("Create Reports")) {
                fail("Task was not deleted.");
            }
        }
    }

    @Test
    public void testDisplayFullTaskReport() {
        part2.showReport();
        Task[] tasks = part2.tasks;
        for (Task task : tasks) {
            if (task != null) {
                assertNotNull(task.getTaskName());
                assertNotNull(task.getTaskDescription());
                assertNotNull(task.getFirstName());
                assertNotNull(task.getLastName());
                assertTrue(task.getDuration() > 0);
                assertNotNull(task.getTaskId());
                assertNotNull(task.getStatus());
            }
        }
    }
}

